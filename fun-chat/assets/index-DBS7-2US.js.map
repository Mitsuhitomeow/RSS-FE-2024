{"version":3,"file":"index-DBS7-2US.js","sources":["../../src/app/components/base-component.ts","../../src/app/components/button/button.ts","../../src/app/components/input/input.ts","../../src/app/pages/auth-page/form-register/form-inputs/form-fieldset.ts","../../src/app/pages/auth-page/form-register/form-register.ts","../../src/app/pages/auth-page/index.ts","../../src/app/app.ts","../../src/main.ts"],"sourcesContent":["export default class Component<T extends HTMLElement = HTMLElement> {\n  protected children: Component[] = [];\n\n  protected node: T;\n\n  constructor({ tag = 'div', className = '', text = '' }, ...children: Component[]) {\n    const node = document.createElement(tag) as T;\n    node.className = className;\n    node.textContent = text;\n    this.node = node;\n\n    if (children) {\n      this.appendChildren(children);\n    }\n  }\n\n  public append(child: Component): void {\n    this.children.push(child);\n    this.node.append(child.getNode());\n  }\n\n  public appendChildren(children: Component[]): void {\n    children.forEach((el) => {\n      this.append(el);\n    });\n  }\n\n  public getNode(): T {\n    return this.node;\n  }\n\n  public getChildren(): Component[] {\n    return this.children;\n  }\n\n  public setTextContent(content: string): void {\n    this.node.textContent = content;\n  }\n\n  public setAttribute(attribute: string, value: string): void {\n    this.node.setAttribute(attribute, value);\n  }\n\n  public removeAttribute(attribute: string): void {\n    this.node.removeAttribute(attribute);\n  }\n\n  public toggleClass(className: string): void {\n    this.node.classList.toggle(className);\n  }\n\n  public addListener(event: string, listener: () => void, options = false): void {\n    this.node.addEventListener(event, listener, options);\n  }\n\n  public removeListener(event: string, listener: () => void, options = false): void {\n    this.node.removeEventListener(event, listener, options);\n  }\n\n  public destroyChildren(): void {\n    const childrenNodes = this.node.childNodes as NodeListOf<HTMLElement>;\n    childrenNodes.forEach((child: HTMLElement) => {\n      if (child instanceof Component) {\n        child.destroy();\n      }\n    });\n    this.children.length = 0;\n  }\n\n  public destroy(): void {\n    this.destroyChildren();\n    this.node.remove();\n  }\n}\n","import Component from '../base-component';\n\ninterface ButtonProp {\n  text: string;\n  className: string;\n  callback?: () => void;\n}\n\nexport default class Button extends Component {\n  constructor({ text, className, callback }: ButtonProp) {\n    super({ tag: 'button', className, text });\n\n    if (callback) {\n      this.addListener('click', callback);\n    }\n  }\n}\n","import Component from '../base-component';\n\ninterface InputProps {\n  type: string;\n  className: string;\n  placeholder: string;\n}\n\nexport default class Input extends Component {\n  constructor({ type, className, placeholder }: InputProps) {\n    super({ tag: 'input', className });\n\n    this.setAttribute('type', type);\n    this.setAttribute('placeholder', placeholder);\n  }\n}\n","import Component from '../../../../components/base-component';\nimport Input from '../../../../components/input/input';\nimport './form-fieldset.scss';\n\nexport default class Fieldset {\n  protected fieldset: Component;\n\n  protected legend: Component;\n\n  protected inputLog: Input;\n\n  protected inputPass: Input;\n\n  constructor() {\n    this.fieldset = new Component({ tag: 'fieldset', className: 'field-inputs' });\n    this.legend = new Component({ tag: 'legend', className: 'field-legend', text: 'Авторизация' });\n    this.inputLog = new Component(\n      { className: 'field field-container--name' },\n      new Component({ tag: 'label', className: 'label-log', text: 'Имя' }),\n      new Input({\n        type: 'input',\n        className: 'input-log',\n        placeholder: 'Введите имя',\n      }),\n    );\n    this.inputPass = new Component(\n      { className: 'field field-container--password' },\n      new Component({ tag: 'label', className: 'label-pass', text: 'Пароль' }),\n      new Input({\n        type: 'input',\n        className: 'input-pass',\n        placeholder: 'Введите пароль',\n      }),\n    );\n\n    this.fieldset.appendChildren([this.legend, this.inputLog, this.inputPass]);\n  }\n\n  public getFieldsetComponent() {\n    return this.fieldset;\n  }\n}\n","import Component from '../../../components/base-component';\nimport Button from '../../../components/button/button';\nimport Fieldset from './form-inputs/form-fieldset';\nimport './form-register.scss';\n\nexport default class FormRegister {\n  protected form: Component;\n\n  protected fieldset: Fieldset;\n\n  constructor() {\n    this.fieldset = new Fieldset();\n    const FieldsetComponent = this.fieldset.getFieldsetComponent();\n\n    this.form = new Component(\n      {\n        tag: 'form',\n        className: 'form-register',\n      },\n      FieldsetComponent,\n      new Button({\n        text: 'click',\n        className: 'form-btn',\n      }),\n      new Button({\n        text: 'info',\n        className: 'form-btn',\n      }),\n    );\n  }\n\n  public getForm(): HTMLElement {\n    return this.form.getNode();\n  }\n}\n","import FormRegister from './form-register/form-register';\n\nexport default class AuthorizationPage {\n  private form: FormRegister;\n\n  private node: HTMLElement;\n\n  constructor() {\n    this.form = new FormRegister();\n    this.node = this.form.getForm();\n  }\n\n  public getNode() {\n    return this.node;\n  }\n}\n","import AuthorizationPage from './pages/auth-page';\n\nexport default class App {\n  private body: HTMLElement;\n\n  private authPage: AuthorizationPage;\n\n  constructor() {\n    this.body = document.body;\n    this.authPage = new AuthorizationPage();\n  }\n\n  public start(): void {\n    this.body.append(this.authPage.getNode());\n  }\n}\n","import App from './app/app';\nimport './styles/style.css';\nimport './styles/normalize.css';\n\nconst app = new App();\napp.start();\n"],"names":["Component","tag","className","text","children","__publicField","node","child","el","content","attribute","value","event","listener","options","Button","callback","Input","type","placeholder","Fieldset","FormRegister","FieldsetComponent","AuthorizationPage","App","app"],"mappings":"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"}